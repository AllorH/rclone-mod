name: Go

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:

    - name: Set up Go 1.13
      uses: actions/setup-go@v1
      with:
        go-version: 1.13
      id: go

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name: Get dependencies
      run: |
        sudo apt update
        sudo apt install upx -yqq 
        #go get -v -t -d github.com/vpsbash/rclone-mod
        #if [ -f Gopkg.toml ]; then
        #    curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
        #    dep ensure
        #fi

    - name: Build
      run: |
       mkdir bin
       mkdir bin/linux
       mkdir bin/linux/amd64
       CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -o bin/linux/amd64/ -ldflags "-s" .
       upx -9 bin/linux/amd64/rclone-mod
       mkdir bin/linux/i386
       CGO_ENABLED=0 GOOS=linux GOARCH=386 go build -o bin/linux/i386/ -ldflags "-s" .
       upx -9 bin/linux/i386/rclone-mod
       mkdir bin/linux/arm64
       CGO_ENABLED=0 GOOS=linux GOARCH=arm64 go build -o bin/linux/arm64/ -ldflags "-s" .
       upx -9 bin/linux/arm64/rclone-mod
       mkdir bin/linux/armhf
       CGO_ENABLED=0 GOOS=linux GOARCH=arm go build -o bin/linux/armhf/ -ldflags "-s" .
       upx -9 bin/linux/armhf/rclone-mod
       mkdir bin/windows
       mkdir bin/windows/i386
       CGO_ENABLED=0 GOOS=windows GOARCH=386 go build -o bin/windows/i386/ -ldflags "-s" .
       mkdir bin/windows/amd64
       CGO_ENABLED=0 GOOS=windows GOARCH=amd64 go build -o bin/windows/amd64/ -ldflags "-s" .
       mkdir bin/darwin
       mkdir bin/darwin/i386
       CGO_ENABLED=0 GOOS=darwin GOARCH=386 go build -o bin/darwin/i386/ -ldflags "-s" .
       mkdir bin/darwin/amd64
       CGO_ENABLED=0 GOOS=darwin GOARCH=amd64 go build -o bin/darwin/amd64/ -ldflags "-s" .
    - name: Upload artifact
      uses: actions/upload-artifact@master
      with:
        name: Rclone mod
        path: ./bin
